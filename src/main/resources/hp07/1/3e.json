{"rowCount":3,"stmt":"WITH\n  -- we can only respect people that like at least one beer\n  likers AS (SELECT DISTINCT person FROM likes),\n  -- bars in which people could find liked beers: candidates\n  candidates AS (SELECT bar, person FROM serves JOIN likes USING (beverage)),\n  -- only the bars\n  possible_bars AS (SELECT DISTINCT bar FROM candidates),\n  -- combinations of possible bars and all persons that like something\n  all_combinations AS (SELECT * FROM (SELECT bar FROM candidates) bars CROSS JOIN likers),\n  -- actual present combinations\n  actual_combinations AS (SELECT bar, person FROM candidates),\n  -- bars for which no combination exists\n  missed_bars AS (SELECT bar FROM (SELECT * FROM all_combinations EXCEPT SELECT * FROM actual_combinations) _ )\n\n-- possible bars without missing bars: bars in which all persons find a liked beer\nSELECT * FROM possible_bars EXCEPT SELECT * FROM missed_bars\n\n-- this is equivalent to the following query if we would have a division operator in postgres\n-- SELECT bar, person FROM serves JOIN likes USING (beverage)\n-- DIVISION\n-- SELECT person FROM likes;","currentFile":"3e","columns":["BAR"],"limits":false}